<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhonghui.carbonReport.mapper.ViewScmPurchasingContractMapper">
    
    <resultMap type="ViewScmPurchasingContract" id="ViewScmPurchasingContractResult">
        <result property="contractId"    column="contract_id"    />
        <result property="contractNo"    column="contract_no"    />
        <result property="applicationId"    column="application_id"    />
        <result property="saleSupplierId"    column="sale_supplier_id"    />
        <result property="supplierName"    column="supplier_name"    />
        <result property="applicationNo"    column="application_no"    />
        <result property="contractAmount"    column="contract_amount"    />
        <result property="contractYear"    column="contract_year"    />
        <result property="contractQuarter"    column="contract_quarter"    />
        <result property="contractMonth"    column="contract_month"    />
        <result property="contractYearMonth"    column="contract_year_month"    />
        <result property="contractDate"    column="contract_date"    />
    </resultMap>

    <sql id="selectViewScmPurchasingContractVo">
        select
            contract_id,
            contract_no,
            application_id,
            sale_supplier_id,
            supplier_name,
            application_no,
            contract_amount,
            contract_year,
            contract_quarter,
            contract_month,
            contract_year_month,
            contract_date
        from
            view_scm_purchasing_contract
    </sql>

    <select id="selectViewScmPurchasingContractList" parameterType="ViewScmPurchasingContract" resultMap="ViewScmPurchasingContractResult">
        <include refid="selectViewScmPurchasingContractVo"/>
        <where>  
            <if test="contractId != null "> and contract_id = #{contractId}</if>
            <if test="contractNo != null  and contractNo != ''"> and contract_no like concat('%', #{contractNo}, '%')</if>
            <if test="applicationId != null "> and application_id = #{applicationId}</if>
            <if test="saleSupplierId != null "> and sale_supplier_id = #{saleSupplierId}</if>
            <if test="supplierName != null  and supplierName != ''"> and supplier_name like concat('%', #{supplierName}, '%')</if>
            <if test="applicationNo != null  and applicationNo != ''"> and application_no like concat('%', #{applicationNo}, '%')</if>
            <if test="contractYear != null  and contractYear != ''"> and contract_year = #{contractYear}</if>
            <if test="contractQuarter != null "> and contract_quarter = #{contractQuarter}</if>
            <if test="contractMonth != null "> and contract_month = #{contractMonth}</if>
            <if test="contractYearMonth != null  and contractYearMonth != ''"> and contract_year_month = #{contractYearMonth}</if>
            <if test="contractDate != null  and contractDate != ''"> and contract_date = #{contractDate}</if>
        </where>
    </select>
    
    <select id="selectViewScmPurchasingContractByContractId" parameterType="Long" resultMap="ViewScmPurchasingContractResult">
        <include refid="selectViewScmPurchasingContractVo"/>
        where contract_id = #{contractId}
    </select>

    <select id="selectMonthReport" parameterType="ViewScmPurchasingContract" resultMap="ViewScmPurchasingContractResult">
        SELECT
            ym.`month` as contract_month,
            IFNULL(tm.total,0) contract_amount,
            tm.sale_supplier_id,
            tm.supplier_name,
            tm.application_no,
            tm.contract_no
        FROM
            scm_year_month ym
        LEFT JOIN (
            SELECT
                sale_supplier_id,
                supplier_name,
                IFNULL(SUM(contract_amount), 0) total,
                contract_month,
                application_no,
                contract_no
        FROM
            view_scm_purchasing_contract
        <where>
            <if test="contractYear != null  and contractYear != ''"> and contract_year = #{contractYear}</if>
            <if test="saleSupplierId != null "> and sale_supplier_id = #{saleSupplierId}</if>
            <if test="applicationNo != null  and applicationNo != ''"> and application_no like concat('%', #{applicationNo}, '%')</if>
            <if test="contractNo != null and contractNo != ''"> and contract_no like concat('%', #{contractNo}, '%')</if>
        </where>
        GROUP BY
        contract_month, sale_supplier_id, application_no, contract_no
        ) tm ON ym.no = tm.contract_month
        ORDER BY ym.no
    </select>

    <select id="selectQuarterReport" parameterType="ViewScmPurchasingContract" resultMap="ViewScmPurchasingContractResult">
        SELECT
            yq.`quarter` as contract_quarter,
            IFNULL(tm.total,0) contract_amount,
            tm.sale_supplier_id,
            tm.supplier_name,
            tm.application_no,
            tm.contract_no
        FROM
            scm_year_quarter yq
        LEFT JOIN (
            SELECT
                sale_supplier_id,
                supplier_name,
                IFNULL(SUM(contract_amount), 0) total,
                contract_quarter,
                application_no,
                contract_no
        FROM
            view_scm_purchasing_contract
        <where>
            <if test="contractYear != null  and contractYear != ''"> and contract_year = #{contractYear}</if>
            <if test="saleSupplierId != null "> and sale_supplier_id = #{saleSupplierId}</if>
            <if test="applicationNo != null  and applicationNo != ''"> and application_no like concat('%', #{applicationNo}, '%')</if>
            <if test="contractNo != null and contractNo != ''"> and contract_no like concat('%', #{contractNo}, '%')</if>
        </where>
        GROUP BY
        contract_quarter, sale_supplier_id, application_no, contract_no
        ) tm ON yq.no = tm.contract_quarter
        ORDER BY yq.no
    </select>

    <select id="selectMonthSupplierReport" parameterType="ViewScmPurchasingContract" resultMap="ViewScmPurchasingContractResult">
        SELECT
            ym.`month` as contract_month,
            IFNULL(tm.total,0) contract_amount,
            tm.sale_supplier_id,
            tm.supplier_name
        FROM
            scm_year_month ym
        LEFT JOIN (
            SELECT
                sale_supplier_id,
                supplier_name,
                IFNULL(SUM(contract_amount), 0) total,
                contract_month,
                application_no,
                contract_no
        FROM
            view_scm_purchasing_contract
        <where>
            <if test="contractYear != null  and contractYear != ''"> and contract_year = #{contractYear}</if>
            <if test="saleSupplierId != null "> and sale_supplier_id = #{saleSupplierId}</if>
        </where>
        GROUP BY
        contract_month, sale_supplier_id
        ) tm ON ym.no = tm.contract_month
        ORDER BY ym.no
    </select>

    <select id="selectQuarterSupplierReport" parameterType="ViewScmPurchasingContract" resultMap="ViewScmPurchasingContractResult">
        SELECT
            yq.`quarter` as contract_quarter,
            IFNULL(tm.total,0) contract_amount,
            tm.sale_supplier_id,
            tm.supplier_name
        FROM
            scm_year_quarter yq
        LEFT JOIN (
            SELECT
                sale_supplier_id,
                supplier_name,
                IFNULL(SUM(contract_amount), 0) total,
                contract_quarter,
                application_no,
                contract_no
        FROM
            view_scm_purchasing_contract
        <where>
            <if test="contractYear != null  and contractYear != ''"> and contract_year = #{contractYear}</if>
            <if test="saleSupplierId != null "> and sale_supplier_id = #{saleSupplierId}</if>
        </where>
        GROUP BY
        contract_quarter, sale_supplier_id
        ) tm ON yq.no = tm.contract_quarter
        ORDER BY yq.no
    </select>
</mapper>